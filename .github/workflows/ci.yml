on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: Continuous integration

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust: 1.56.0 # MSRV
            features: "\"\""
          - rust: 1.56.0 # MSRV
            features: "\"std\""
          - rust: stable
            features: "\"\""
          - rust: stable
            features: "\"std\""
          - rust: nightly
            features: "\"\""
          - rust: nightly
            features: "\"std\""
          - rust: nightly
            features: "\"std, coerce\""
          - rust: nightly
            features: "\"coerce\""

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest,cargo-nextest
      - name: Tests
        run: |
          cargo clippy --no-default-features --features ${{ matrix.features }}
          cargo nextest run --verbose --no-default-features --features ${{ matrix.features }}

  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Miri
        run: |
          rustup toolchain install nightly --component miri
          rustup override set nightly
          cargo miri setup
      - name: Test with Miri
        run: |
          cargo miri test
          cargo miri test --features nightly
